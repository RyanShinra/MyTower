{
    "git.suggestSmartCommit": false,
    "[python]": {
        "editor.defaultFormatter": "ms-python.autopep8",
        "editor.formatOnSave": false,
        "editor.codeActionsOnSave": {
            "source.organizeImports": "never"
        }
    },
    "editor.formatOnSaveMode": "modifications",

    // Black formatter settings
    // NOTE: Black's blank line formatting conflicts with custom rules:
    // - Functions with >5 lines get 2 blank lines (not PEP8, but custom requirement)
    // - Functions with â‰¤5 lines get 1 blank line (PEP8 compliant)
    // Black will complain about extra blank lines, but this is intentional.
    // Use Black for checking other formatting issues, but ignore E30x blank line errors.
    "black-formatter.args": ["--line-length=120"],

    // Flake8 linter settings
    "flake8.args": ["--config=.flake8"],
    "flake8.importStrategy": "fromEnvironment",
    "flake8.cwd": "${workspaceFolder}",
    "flake8.severity": {
        "E": "Warning",
        "F": "Error",
        "W": "Warning"
    },

    "python.analysis.exclude": ["mytower/tests", "**/site-packages/**", "**/__pycache__/**", "**/tests/**", "**/venv/**"],
    "python.analysis.autoImportCompletions": true,
    "python.analysis.autoIndent": true,
    "python.analysis.completeFunctionParens": false,
    "python.analysis.useLibraryCodeForTypes": true,
    "python.analysis.autoSearchPaths": true,
    "python.analysis.stubPath": "./typings",
    "python.analysis.logLevel": "Warning",
    "python.analysis.inlayHints.functionReturnTypes": true,
    "python.analysis.inlayHints.variableTypes": true,
    "python.analysis.inlayHints.pytestParameters": true,
    "python.analysis.inlayHints.callArgumentNames": "off",
    "python.analysis.generateWithTypeAnnotation": true,
    "python.analysis.typeEvaluation.strictDictionaryInference": true,

    // Terminal settings for Git Bash
    "terminal.integrated.defaultProfile.windows": "Git Bash",
    "terminal.integrated.profiles.windows": {
        "Git Bash": {
            "path": "C:\\Program Files\\Git\\bin\\bash.exe",
            "args": ["--login"]
        }
    },
    "python.terminal.activateEnvironment": true,

    // Python interpreter path (update this to your actual venv path)
    "python.defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python",
    "cSpell.words": [
        "blit",
        "collidepoint",
        "htmlcov",
        "isort",
        "levelname",
        "msecs",
        "mypy",
        "mytower",
        "popleft",
        "pycache",
        "pytest",
        "venv"
    ],
    "cSpell.ignorePaths": [
        "package-lock.json",
        "node_modules",
        "vscode-extension",
        ".git/{info,lfs,logs,refs,objects}/**",
        ".git/{index,*refs,*HEAD}",
        ".vscode",
        ".vscode-insiders",
        ".history",
        "pyproject.toml",
        "typings",
        ".venv/**",
        "**/__pycache__/**",
        "**/*.pyc",
        "coverage.xml",
        "cov.xml",
        "htmlcov/**",
        "requirements.txt"
    ],
    "[jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "files.eol": "\n",
    "python.testing.pytestArgs": [
        "mytower",
        "--cov=mytower.game.elevator",
        "--cov-report=xml",
        "--cov-report=html",
        "--cov-report=term-missing",
        "--cov-branch"

    ],
    "python.testing.pytestEnabled": true,
    "python.testing.unittestEnabled": false,
    "coverage-gutters.coverageFileNames": [
        "coverage.xml",
        "cov.xml"
    ],
    "coverage-gutters.showLineCoverage": true,
    "coverage-gutters.showRulerCoverage": true,
    "coverage-gutters.coverageReportFileName": "coverage.xml",
    "python.analysis.typeCheckingMode": "strict",
    "python.analysis.languageServerMode": "full",
    "python.analysis.diagnosticMode": "workspace",  // Scan all workspace files
    "python.analysis.enablePytestSupport": true,

    "editor.inlineSuggest.enabled": true,
    "editor.inlineSuggest.experimental.triggerCommandOnProviderChange": false,
    "C_Cpp.default.compilerPath": "c:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Tools\\MSVC\\14.29.30133\\bin\\Hostx64\\x64\\cl.exe",
    "cSpell.ignoreWords": [
        "PCAC"
    ],
    "github.copilot.nextEditSuggestions.enabled": true,
    "errorLens.messageEnabled": false,
    "errorLens.problemRangeDecorationEnabled": true,
    "editor.codeActionsOnSave": {
        "source.organizeImports": "never",
        "source.unusedImports": "always"
    },
    "makefile.configureOnOpen": false,

    // Ruff settings (native language server)
    "ruff.enable": true,
    "ruff.organizeImports": true,
    "ruff.fixAll": true,
    "ruff.configurationPreference": "filesystemFirst",
    "ruff.lineLength": 120,

}
